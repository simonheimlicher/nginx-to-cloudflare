{{- /* -}}
# Canonical redirect map to include in nginx config
# Discussion: https://discourse.gohugo.io/t/aliases-are-broken/12318/6
# Source: https://github.com/gohugoio/gohugoioTheme/blob/master/layouts/index.redir
# https://github.com/gohugoio/hugoDocs/blob/master/config/_default/config.toml
#
# This template allows generating an include file for nginx by Hugo (see "outputs" below).
#
# The target URLs generated by this template are absolute URLs and point to the canonical site as configured by
#   site.Params.canonicalBaseURL
#
# You can configure Hugo to generate this include file as yet another output file,
# as follows.
#
# Add the below TOML lines to hugo.toml to make sure the include file is generated:
#
# disableAliases = true
# [outputs]
#   home = [ "HTML", "RSS", "REDIR" ]
#   section = [ "HTML", "RSS"]
#
# [mediaTypes]
#   [mediaTypes."text/nginx"]
#     delimiter = ""
#
# [outputFormats]
#   [outputFormats.redir_canonical_nginx]
#     mediatype = "text/nginx"
#     baseName = "_redir_canonicalects.nginx"
#     isPlainText = true
#     notAlternative = true
{{- */ -}}

{{- $regex := false -}}
{{- $matchPrefix := "'~^" -}}
{{- $matchSuffix := "'" -}}
{{- $baseURL := default site.BaseURL site.Params.canonicalBaseURL }}
{{- $redirectedURLs := slice }}
# Redirect map for all pages and all their aliases for nginx
# Generated by layout "layouts/index.redir_canonical_nginx"

{{ range $p := site.Pages -}}
    {{- with $p.RelPermalink }}
        {{- if not (in $redirectedURLs . )}}
            {{- $redirectedURLs = append $redirectedURLs (slice .) }}
            {{- . | printf "%-80s" }} {{ printf " %s%s;\n" $baseURL (strings.TrimLeft "/" .) }}
        {{- end }}
    {{- end }}
    {{- range .Aliases }}
        {{- if not (in $redirectedURLs . )}}
            {{- $redirectedURLs = append $redirectedURLs (slice .) }}
            {{- if $regex }}
                {{- printf "%s%s%s" $matchPrefix . $matchSuffix | printf "%-80s" }} {{ printf " %s%s" $baseURL $p.RelPermalink }};
            {{- else -}}
                {{- . | printf "%-80s" }} {{ printf " %s%s;\n" $baseURL (strings.TrimLeft "/" $p.RelPermalink) }}
            {{- end }}
        {{- end }}
    {{- end -}}
    {{- with .Content }}
        {{- $urls := findRE "<a[^>]* href=\"/[^\"|\\\"]*\\.[a-z]+\"" . }}
        {{- range $url := $urls }}
            {{- $url = (strings.TrimPrefix "<a href=\"" $url) }}
            {{- $url = strings.TrimSuffix "\"" $url }}
            {{- with $url }}
                {{- if not (in $redirectedURLs . )}}
                    {{- $redirectedURLs = append $redirectedURLs (slice .) }}
                    {{- . | printf "%-80s" }} {{ printf " %s%s;\n" $baseURL (strings.TrimLeft "/" .) }}
                {{- end }}
            {{- end }}
        {{- end }}
    {{- end }}
{{- end }}
