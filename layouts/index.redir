{{- /* -}}
# Redirect map for Netlify, CloudFlare etc.
# Discussion: https://discourse.gohugo.io/t/aliases-are-broken/12318/6
# Source: https://github.com/gohugoio/gohugoioTheme/blob/master/layouts/index.redir
# https://github.com/gohugoio/hugoDocs/blob/master/config/_default/config.toml
# We do redirects via an include file for  Netlify, CloudFlare etc., generated by Hugo (see "outputs" below).
# Add be below TOML lines to config.toml to make sure the redirects map file is generated
# disableAliases = true
# [outputs]
# home = [ "HTML", "RSS", "REDIR" ]
# section = [ "HTML", "RSS"]
#
# [mediaTypes]
#   [mediaTypes."text/redirects"]
#     delimiter = ""
#
# [outputFormats]
# [outputFormats.REDIR]
# mediatype = "text/redirects"
# baseName = "_redirects"
# isPlainText = true
# notAlternative = true
{{- */ -}}

{{- $redirectHttpStatus := 301 -}}
{{- $redirects := slice -}}
{{- $pathMax := 0 }}
{{- $targetMax := 0 }}
{{- $statusMax := (len (print "%v" $redirectHttpStatus)) -}}

# Redirects for Netlify, CloudFlare etc.
# Generated by layout "layouts/index.redir"
{{- range .Sites -}}
  {{- $langPrefix := .LanguagePrefix }}
# Language prefix: {{ $langPrefix }}
  {{- range $p := .Pages -}}
    {{- range $alias := .Aliases -}}
      {{- $path := $alias }}
      {{- if not (hasPrefix $path "/") -}}
        {{- /* Directory-relative alias: Combine with the page's directory */ -}}
        {{- $pageDir := path.Dir (path.Dir $p.RelPermalink) -}}
        {{- $path = path.Join $pageDir $path -}}
        {{- /* warnf "index.redir: added directory:\nalias=%v\npageDir=%v\npath=%v" $alias $pageDir $path */ -}}
      {{- end -}}
      {{- if not (findRE `(?:[^/.]+/|[.][^/.]+)$` $path) }}
        {{- $path = printf "%s/" $path }}
        {{- /* warnf "index.redir: added trailing slash:\nalias=%v\npath=%v" $alias $path */ -}}
      {{- end -}}
      {{- if and $langPrefix (not (hasPrefix $path $langPrefix) ) }}
        {{- $path = printf "%s%s" $langPrefix $path }}
        {{- /* warnf "index.aliases: added language prefix '%v':\nalias=%v\npath=%v" $langPrefix $alias $path */ -}}
      {{- end }}
      {{- $pathMax = math.Max (len $path) $pathMax }}
      {{- $target := $p.RelPermalink }}
      {{- $targetMax = math.Max (len $target) $targetMax }}
      {{- $redirects = append (dict "path" $path "target" $target "status" $redirectHttpStatus) $redirects }}
    {{- end -}}
  {{- end }}

  {{- /* Read and parse JSON file with all URLs that
        have been accessed since 2018 at least 10 times */ -}}
  {{- range .Data.redirects -}}
    {{- $path := .path -}}
    {{- $target := .target -}}
    {{- $status := int (.status | default $redirectHttpStatus) -}}
    {{- $exists := false -}}
    {{- range  $redirects -}}
      {{- if eq .path $path -}}
        {{- $exists = true -}}
      {{- end -}}
    {{- end -}}
    {{- if not $exists -}}
      {{- $pathMax = math.Max (len $path) $pathMax }}
      {{- $targetMax = math.Max (len $target) $targetMax }}
      {{- $redirects = append (dict "path" $path "target" $target "status" $status) $redirects -}}
    {{- end -}}
  {{- end }}
{{- end }}

{{ range (sort $redirects "path" "asc") | uniq -}}
  {{- printf "%-*s %-*s %d\n" (int $pathMax) .path (int $targetMax) .target .status -}}
{{- end -}}
# End of redirects
